<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>Операции ввода/вывода информации на экран.</title>
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
body {
  margin: 5px 5px 5px 5px;
  background-color: #ffffff;
}
/* ========== Text Styles ========== */
hr { color: #000000}
body, table /* Normal text */
{
 font-size: 10pt;
 font-family: 'Arial', 'Helvetica', sans-serif;
 font-style: normal;
 font-weight: normal;
 color: #000000;
 text-decoration: none;
 ;
}
span.rvts1 /* Heading */
{
 font-weight: bold;
 color: #0000ff;
}
span.rvts2 /* Subheading */
{
 font-weight: bold;
 color: #000080;
}
span.rvts3 /* Keywords */
{
 font-style: italic;
 color: #800000;
}
a.rvts4, span.rvts4 /* Jump 1 */
{
 color: #008000;
 text-decoration: underline;
}
a.rvts5, span.rvts5 /* Jump 2 */
{
 color: #008000;
 text-decoration: underline;
}
span.rvts6 /* Font Hint */
{
 color: #9d9da1;
}
span.rvts7 /* Font Hint Title */
{
 font-size: 15pt;
 font-family: 'Tahoma', 'Geneva', sans-serif;
 font-weight: bold;
 color: #716f64;
}
span.rvts8 /* Font Hint Bold */
{
 font-weight: bold;
 color: #9d9da1;
}
span.rvts9 /* Font Hint Italic */
{
 font-style: italic;
 color: #9d9da1;
}
span.rvts10
{
 font-size: 8pt;
}
span.rvts11
{
 font-size: 12pt;
 font-weight: bold;
}
span.rvts12
{
 font-size: 12pt;
}
span.rvts13
{
}
span.rvts14
{
 font-weight: bold;
}
span.rvts15
{
 font-style: italic;
}
span.rvts16
{
 color: #0000ff;
}
span.rvts17
{
 font-weight: bold;
 color: #0000ff;
}
span.rvts18
{
 color: #008000;
}
span.rvts19 /* Font Style */
{
 font-size: 16pt;
 font-family: 'Tahoma', 'Geneva', sans-serif;
 color: #ffffff;
}
span.rvts20 /* Font Style */
{
 font-family: 'MS Sans Serif', 'Geneva', sans-serif;
 color: #808080;
}
span.rvts21 /* Font Style */
{
 font-family: 'Verdana', 'Geneva', sans-serif;
 font-style: italic;
 color: #c0c0c0;
}
a.rvts22, span.rvts22 /* Font Style */
{
 font-family: 'Verdana', 'Geneva', sans-serif;
 font-style: italic;
 color: #6666ff;
 text-decoration: underline;
}
/* ========== Para Styles ========== */
p,ul,ol /* Paragraph Style */
{
 text-align: left;
 text-indent: 0px;
 padding: 0px 0px 0px 0px;
 margin: 0px 0px 0px 0px;
}
.rvps1 /* Centered */
{
 text-align: center;
}
.rvps2
{
 text-align: center;
 line-height: 1.15;
}
.rvps3
{
 line-height: 1.15;
}
.rvps4
{
 text-indent: -24px;
}
.rvps5
{
 text-indent: 46px;
 line-height: 1.15;
}
.rvps6
{
 text-indent: 47px;
 line-height: 1.15;
}
.rvps7 /* Paragraph Style */
{
 background: #9fbed0;
 margin: 0px 0px 20px 0px;
}
.rvps8 /* Paragraph Style */
{
 text-align: center;
 background: #e4e4e4;
 margin: 20px 0px 0px 0px;
}
.rvps9 /* Paragraph Style */
{
 border-color: #c0c0c0;
 border-style: solid;
 border-width: 1px;
 border-right: none;
 border-bottom: none;
 border-left: none;
 background: #ffffff;
 padding: 3px 0px 0px 0px;
 margin: 27px 0px 0px 0px;
}
--></style>
<script type="text/javascript">if(top.frames.length == 0) { top.location.href="../BookC++.htm?{C75ADC10-133A-40DE-A7B1-CE3472ADCF82}.htm"; }</script>
<meta name="generator" content="HelpNDoc Free"></head>
<body>

<p class=rvps7><span class=rvts19>Операции ввода/вывода информации на экран.</span></p>
<p class=rvps2><span class=rvts11>Операции ввода/вывода информации на экран.</span></p>
<p class=rvps3><span class=rvts12> &nbsp; &nbsp; &nbsp; &nbsp;Операции ввода/вывода информации на экран осуществляются по средствам подключения внешних модулей, которые содержат специально предназначенные для этого процедуры и функции.</span></p>
<p class=rvps3><span class=rvts10><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=1 class=rvps4 style="text-indent: 0px"><span class=rvts13>Подключаемый модуль&nbsp;&nbsp; </span><span class=rvts14>#include «stdio.h»</span><span class=rvts13>&nbsp; содержит функции ввода/вывода:</span></li>
</ol>
<p class=rvps5><span class=rvts16>printf(«Сообщение»); &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//вывод текста на экран</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=2 class=rvps4 style="text-indent: 0px"><span class=rvts13>Подключаемый модуль&nbsp;&nbsp;&nbsp; </span><span class=rvts14>#include &lt; iostream &gt;</span><span class=rvts13>&nbsp; дает возможность ввода/вывода таким образом:</span></li>
</ol>
<p class=rvps3><span class=rvts14>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts17>char</span><span class=rvts16>&nbsp; str[256];</span></p>
<p class=rvps5><span class=rvts16>std::cout &lt;&lt; «Введите значение» &lt;&lt; std::endl;</span></p>
<p class=rvps5><span class=rvts16>std::cin &gt;&gt; str; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//считываем с экрана в переменную</span></p>
<p class=rvps5><span class=rvts16>std::cout &lt;&lt; str &lt;&lt; std::endl; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//вывод на экран знач. Переменной</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=3 class=rvps4 style="text-indent: 0px"><span class=rvts13>С помощью ключевого слова USING для указания области действия пространства имен NAMESPACE указанного далее как&nbsp;&nbsp; </span><span class=rvts14>using namespace std;</span><span class=rvts13>&nbsp;&nbsp; дает возможность ввода/вывода таким образом:</span></li>
</ol>
<p class=rvps5><span class=rvts17>char</span><span class=rvts16>&nbsp; str[256];</span></p>
<p class=rvps5><span class=rvts16>cout &lt;&lt; «Введите значение» &lt;&lt; endl; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=rvts18>//вывод текста на экран</span></p>
<p class=rvps5><span class=rvts16>cin &gt;&gt; str; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//считываем с экрана в переменную</span></p>
<p class=rvps5><span class=rvts16>cout &lt;&lt;str &lt;&lt; endl; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//вывод на экран знач. Переменной</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=4 class=rvps4 style="text-indent: 0px"><span class=rvts13>Подключение пространства имени&nbsp;&nbsp; </span><span class=rvts14>using namespace System;</span><span class=rvts13>&nbsp; </span></li>
</ol>
<p class=rvps3><span class=rvts13>и подключив&nbsp;&nbsp; </span><span class=rvts14>#include &lt; string &gt;</span><span class=rvts13> дает возможность ввода/вывода таким образом:</span></p>
<p class=rvps6><span class=rvts17>String</span><span class=rvts16> *str;</span></p>
<p class=rvps6><span class=rvts16>Console::WriteLine(«Введите значение «);</span><span class=rvts13> </span><span class=rvts18>//вывод текста на экран</span></p>
<p class=rvps3><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts16>Console::Write(«Х = «); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p>
<p class=rvps3><span class=rvts16> &nbsp; &nbsp; &nbsp; &nbsp;str = Console::ReadLine(); &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//считываем с экрана в переменную</span></p>
<p class=rvps3><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts16>Console::Read();</span></p>
<p class=rvps6><span class=rvts16>Console::WriteLine(str); &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts18>//вывод на экран знач. Переменной</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<p class=rvps3><span class=rvts13>Конечно не обойтись без </span><span class=rvts15>очистки экрана</span><span class=rvts13> от уже ненужной информации, для этого можно использовать несколько способов:</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=1 class=rvps4 style="text-indent: 0px"><span class=rvts13>Подключение пространства имени&nbsp;&nbsp; </span><span class=rvts14>using namespace System;</span><span class=rvts13>&nbsp; дает возможность использовать функцию очистки так:</span></li>
</ol>
<p class=rvps3><span class=rvts16> &nbsp; &nbsp; &nbsp; &nbsp;system(«cls»);</span></p>
<p class=rvps3><span class=rvts13><br></span></p>
<ol style="text-indent: 0px; margin-left: 0px; list-style-position: outside;">
<li value=2 class=rvps4 style="text-indent: 0px"><span class=rvts13>Подключаемый модуль&nbsp;&nbsp;&nbsp; </span><span class=rvts14>#include &lt;</span><span class=rvts13> </span><span class=rvts14>conio.h &gt;</span><span class=rvts13>&nbsp; дает возможность использовать функцию очистки так:</span></li>
</ol>
<p class=rvps3><span class=rvts13> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=rvts16>clrscr();</span></p>
<p class=rvps8><span class=rvts20>Сомов Е.П. © 2012, Краткий справочник по C++</span></p>
<p class=rvps9><span class=rvts21>This help file has been generated by the freeware version of </span><a class=rvts22 href="http://www.ibe-software.com/products/software/helpndoc/" target="_blank">HelpNDoc</a></p>

</body></html>
